{"version":3,"sources":["firebase/index.js","context/index.js","hooks/index.js","components/Sidebar.js","components/Main.js","images/frog.png","components/User.js","components/Modal.js","components/TodoForm.js","constants/index.js","components/AddNewTodo.js","components/Calendar.js","components/ProjectForm.js","components/AddNewProject.js","components/RenameProject.js","components/Project.js","components/Projects.js","components/Todo.js","components/Next7Days.js","components/Todos.js","components/EditTodo.js","components/MainPage.jsx","images/wave.svg","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","TodoContext","createContext","TodoContextProvider","children","defaultProject","useState","selectedProject","setSelectedProject","undefined","selectedTodo","setSelectedTodo","UID","setUID","todos","setTodos","useEffect","unsubscribe","firestore","collection","onSnapshot","snapshot","data","docs","map","doc","id","useTodos","projectsWithStats","projects","setProjectsWithStats","project","numOfTodos","filter","todo","projectName","name","checked","length","useProjectsWithStats","setProjects","userID","UserId","useProjects","filteredTodos","setFilteredTodos","todayDateFormated","moment","format","date","todoDate","todayDate","diffDays","diff","useFilterTodos","Provider","value","Sidebar","sidebarRef","useRef","useContext","document","addEventListener","handleClick","removeEventListener","e","current","target","contains","console","log","className","ref","Main","User","src","frog","alt","onClick","getAuth","signOut","localStorage","removeItem","href","Modal","showModal","setShowModal","modalRef","modalAnimation","useSpring","opacity","top","config","friction","div","style","TodoForm","handleSubmit","heading","text","setText","day","setDay","time","setTime","todoProject","setTodoProject","showButtons","utils","DateFnsUtils","onSubmit","type","onChange","placeholder","autoFocus","DatePicker","TimePicker","color","size","calendarItems","AddNewTodo","Date","filteredProjects","proj","preventDefault","includes","add","randomcolor","luminosity","Calendar","showMenu","setShowMenu","spin","transform","menuAnimation","display","lineHeight","item","ProjectForm","setValue","confirmButtonText","role","AddNewProject","setProjectName","RenameProject","newProjectName","setNewProjectName","projectsRef","todosRef","oldProjectName","where","get","then","querySnapshot","update","forEach","renameProject","Project","edit","fadeIn","from","marginTop","to","btnTransitions","useTransition","right","enter","leave","props","editProject","delete","deleteProject","Projects","setEdit","pencilColor","span","Todo","hover","setHover","handleDelete","deleteTodo","checkTransitions","position","onMouseEnter","onMouseLeave","checkTodo","nextDayDate","repeatedTodo","repeatNextDay","Next7Days","weekTodos","setWeekTodos","sortedTodosByDay","number","today","parseInt","arrangeDays","slice","concat","Todos","EditTodo","Mainpage","App","getItem","useAuthState","user","signInWithPopup","GoogleAuthProvider","response","uid","setItem","waves","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"wNAgBEA,IAASC,cATc,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,8CAKH,IAAMC,EAAOR,IAASQ,OAEbR,IAAf,E,WCjBIS,EAAcC,0BAEpB,SAASC,EAAT,GAAyC,IAAXC,EAAU,EAAVA,SACpBC,EAAiB,QADa,EAEUC,mBAASD,GAFnB,mBAE7BE,EAF6B,KAEZC,EAFY,OAGIF,wBAASG,GAHb,mBAG7BC,EAH6B,KAGfC,EAHe,OAIdL,qBAJc,mBAI7BM,EAJ6B,KAIxBC,EAJwB,KAK9BC,ECFH,SAAkBF,GAAK,IAAD,EACCN,mBAAS,IADV,mBAClBQ,EADkB,KACXC,EADW,KAyBzB,OAtBAC,qBAAU,WAEN,IAAIC,EAAczB,EACjB0B,YACAC,WAFiB,gBAEGP,EAFH,WAGjBQ,YAAY,SAAAC,GACT,IAAMC,EAAOD,EAASE,KAAKC,KAAK,SAAAC,GAC5B,OAAO,aACHC,GAAKD,EAAIC,IACND,EAAIH,WAGfP,EAASO,MAOb,OAAO,kBAAML,OACd,CAACL,IAEGE,EDvBOa,CAASf,GAEjBgB,ECgFH,SAA8Bd,EAAOe,GAAU,IAAD,EACCvB,mBAAS,IADV,mBAC1CsB,EAD0C,KACvBE,EADuB,KAcjD,OAXAd,qBAAW,WACP,IAAMM,EAAOO,EAASL,KAAK,SAAAO,GACvB,OAAO,aACHC,WAAalB,EAAMmB,QAAQ,SAAAC,GAAI,OAAIA,EAAKC,cAAgBJ,EAAQK,OAASF,EAAKG,WAAUC,QACrFP,MAIXD,EAAqBR,KACtB,CAACR,EAAOe,IAEJD,ED9FmBW,CAAqBzB,ECwD5C,WAAuB,IAAD,EACOR,mBAAS,IADhB,mBAClBuB,EADkB,KACRW,EADQ,KAqBzB,OAlBAxB,qBAAU,WACN,IAAIC,EAAczB,EACjB0B,YACAC,WAAW,YACXC,YAAY,SAAAC,GACT,IAAMC,EAAOD,EAASE,KAAKC,KAAK,SAAAC,GAC5B,MAAO,CACHgB,OAAQhB,EAAIH,OAAOoB,OACnBhB,GAAKD,EAAIC,GACTU,KAAOX,EAAIH,OAAOc,SAG1BI,EAAYlB,MAGhB,OAAO,kBAAML,OACd,IAEIY,ED9EUc,IAEXC,ECuBH,SAAwB9B,EAAOP,EAAiBK,GAAK,IAAD,EACbN,mBAAS,IADI,mBAChDsC,EADgD,KACjCC,EADiC,KA6BvD,OA1BA7B,qBAAW,WACP,IAAIM,EACEwB,EAAoBC,MAASC,OAAO,cAGtC1B,EADmB,UAApBf,EACQO,EAAMmB,QAAO,SAAAC,GAAI,OAAIA,EAAKe,OAASH,KACjB,gBAApBvC,EACEO,EAAMmB,QAAO,SAAAC,GAChB,IAAMgB,EAAWH,IAAOb,EAAKe,KAAM,cAC7BE,EAAYJ,IAAOD,EAAmB,cAEtCM,EAAWF,EAASG,KAAKF,EAAW,QAE1C,OAAOC,GAAW,GAAKA,EAAW,KAEZ,aAApB7C,EACCO,EAEAA,EAAMmB,QAAO,SAAAC,GAAI,OAAIA,EAAKC,cAAgB5B,KAKrDsC,EAAiBvB,KAClB,CAACR,EAAOP,IAEJqC,EDpDeU,CAAexC,EAAOP,GAQ5C,OACI,cAACN,EAAYsD,SAAb,CACIC,MACI,CACI5C,MACAC,SACAR,iBACAE,kBACAC,qBACAM,MAAQ8B,EACRf,SAAWD,EACXlB,eACAC,mBAXZ,SAeKP,IEKEqD,MAvCf,YAA+B,IAAZrD,EAAW,EAAXA,SAETsD,EAAaC,mBAGXhD,EAAoBiD,qBAAW3D,GAA/BU,gBAGRK,qBAAU,WAGN,OAFA6C,SAASC,iBAAiB,QAASC,GAE5B,kBAAMF,SAASG,oBAAoB,QAASD,MACpD,IAGH,IAAMA,EAAc,SAAAE,GAGS,MAAtBP,EAAWQ,SAMZD,EAAEE,SAAWT,EAAWQ,SAAWR,EAAWQ,QAAQE,SAASH,EAAEE,UAC/DxD,GAAgB,GALhB0D,QAAQC,IAAI,SASpB,OACI,qBACIC,UAAU,UACVC,IAAKd,EAFT,SAIKtD,KC1BEqE,MATf,YAA4B,IAAZrE,EAAW,EAAXA,SAEZ,OACI,qBAAKmE,UAAU,OAAf,SACKnE,KCNE,MAA0B,iC,QCmC1BsE,MA9Bf,WAAgB,IAAD,EAEYd,qBAAW3D,GAAvBY,GAFA,EAELD,IAFK,EAEAC,QAWX,OACI,sBAAK0D,UAAU,OAAf,UACI,qBAAKA,UAAU,OAAf,SACI,qBAAKI,IAAKC,EAAMC,IAAI,WAExB,sBAAKN,UAAU,OAAf,UACI,iDACA,mBAAGO,QAdA,WACX,IAAM9E,EAAO+E,cACbC,YAAQhF,GACRa,OAAOJ,GACPwE,aAAaC,WAAW,WAUIC,KAAK,IAAzB,wBAEJ,qBAAKZ,UAAU,QAAf,SACI,oG,QCCDa,MA1Bf,YAAoD,IAApChF,EAAmC,EAAnCA,SAAUiF,EAAyB,EAAzBA,UAAWC,EAAc,EAAdA,aAC3BC,EAAW5B,mBASX6B,EAAiBC,oBAAU,CAC7BC,QAAUL,EAAY,EAAI,EAC1BM,IAAMN,EAAY,MAAQ,KAC1BO,OAAS,CAAEC,SAAW,MAG1B,OACIR,GACA,qBAAKd,UAAU,QAAQC,IAAKe,EAAUT,QAfvB,SAACb,GACbA,EAAEE,SAAWoB,EAASrB,SACrBoB,GAAa,IAajB,SACI,cAAC,WAASQ,IAAV,CAAcC,MAAOP,EAAgBjB,UAAU,YAA/C,SACKnE,O,gFC0EF4F,MA5Ff,YAUG,IATCC,EASF,EATEA,aASF,IAREC,eAQF,SAPEC,EAOF,EAPEA,KAAMC,EAOR,EAPQA,QACNC,EAMF,EANEA,IAAKC,EAMP,EANOA,OACLC,EAKF,EALEA,KAAMC,EAKR,EALQA,QACNC,EAIF,EAJEA,YAAaC,EAIf,EAJeA,eACb7E,EAGF,EAHEA,SAGF,IAFE8E,mBAEF,aADErB,oBACF,SAEE,OACI,cAAC,IAAD,CAAyBsB,MAAOC,IAAhC,SACI,uBAAMC,SAAUb,EAAc1B,UAAU,WAAxC,UACI,sBAAKA,UAAU,OAAf,UAEQ2B,GACA,6BAAKA,IAET,uBACIa,KAAK,OACLvD,MAAO2C,EACPa,SAAU,SAAA/C,GAAC,OAAImC,EAAQnC,EAAEE,OAAOX,QAChCyD,YAAY,YACZC,WAAS,OAGjB,sBAAK3C,UAAU,SAAf,UACI,cAAC,IAAD,IACA,8CAEJ,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,IACA,gDAEJ,cAAC4C,EAAA,EAAD,CACI3D,MAAO6C,EACPW,SAAU,SAAAX,GAAG,OAAIC,EAAOD,SAGhC,sBAAK9B,UAAU,YAAf,UACI,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,IACA,+CAEJ,cAAC6C,EAAA,EAAD,CACI5D,MAAO+C,EACPS,SAAU,SAAAT,GAAI,OAAIC,EAAQD,SAGlC,sBAAKhC,UAAU,eAAf,UACI,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,IACA,oDAEJ,qBAAKA,UAAU,WAAf,SAEQ1C,EAASS,OAAS,EAClBT,EAASL,KAAK,SAAAO,GAAO,OACjB,qBACIwC,UAAS,kBAAakC,IAAgB1E,EAAQK,KAAO,SAAW,IAChE0C,QAAS,kBAAM4B,EAAe3E,EAAQK,OAF1C,SAKKL,EAAQK,MAFJL,EAAQL,OAMrB,qBAAKqE,MAAO,CAACsB,MAAM,WAAnB,yDAORV,GACA,gCACI,qBAAKpC,UAAU,SAASO,QAAS,kBAAMQ,GAAa,IAApD,SACI,cAAC,IAAD,CAAGgC,KAAK,SAEZ,qBAAK/C,UAAU,UAAf,SACI,4DCxFfgD,EAAgB,CAAC,QAAS,cAAe,Y,kBCoFvCC,MA1Ef,WAAqB,MAE0B5D,qBAAW3D,GAA9C4B,EAFS,EAETA,SAAUtB,EAFD,EAECA,gBAAiBK,EAFlB,EAEkBA,IAFlB,EAMiBN,oBAAS,GAN1B,mBAMV+E,EANU,KAMCC,EAND,OAOOhF,mBAAS,IAPhB,mBAOV6F,EAPU,KAOJC,EAPI,OAQK9F,mBAAS,IAAImH,MARlB,mBAQVpB,EARU,KAQLC,EARK,OASOhG,mBAAS,IAAImH,MATpB,mBASVlB,EATU,KASJC,EATI,OAUqBlG,mBAASC,GAV9B,mBAUVkG,EAVU,KAUGC,EAVH,KAsCjB1F,qBAAW,WACP0F,EAAenG,KAChB,CAACA,IAGJ,IAAImH,EAAmB7F,EAASI,QAAO,SAAA0F,GAAI,OAAIA,EAAKlF,QAAU7B,KAG9D,OACI,sBAAK2D,UAAU,aAAf,UACI,qBAAKA,UAAU,MAAf,SACI,wBAAQO,QAAS,kBAAMQ,GAAa,IAApC,0BAIJ,cAAC,EAAD,CAAOD,UAAWA,EAAWC,aAAcA,EAA3C,SACI,cAAC,EAAD,CACIW,aA3ChB,SAAsBhC,GAClBA,EAAE2D,iBAEEzB,IAASoB,EAAcM,SAASpB,KAChCjH,EACK0B,YACAC,WAFL,gBAEyBP,EAFzB,WAGKkH,IACG,CACI3B,KAAOA,EACPlD,KAAOF,IAAOsD,GAAKrD,OAAO,cAC1BqD,IAAMtD,IAAOsD,GAAKrD,OAAO,KACzBuD,KAAOxD,IAAOwD,GAAMvD,OAAO,WAC3BX,SAAU,EACVgF,MAAQU,IAAY,CAACC,WAAa,SAClC7F,YAAcsE,IAI1BnB,GAAa,GACbc,EAAQ,IACRE,EAAO,IAAImB,MACXjB,EAAQ,IAAIiB,QAsBJvB,QAAQ,iBACRC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,OAAQA,EACRC,KAAMA,EACNC,QAASA,EACTC,YAAaA,EACbC,eAAgBA,EAChB7E,SAAU6F,EACVf,aAAa,EACbrB,aAAcA,U,kBCnBnB2C,MApDf,WAAmB,MAEiB3H,oBAAS,GAF1B,mBAER4H,EAFQ,KAEEC,EAFF,KAKP3H,EAAuBoD,qBAAW3D,GAAlCO,mBAGF4H,EAAO3C,oBAAU,CACnB4C,UAAYH,EAAW,eAAiB,iBACxCtC,OAAS,CAAEC,SAAW,MAGpByC,EAAgB7C,oBAAU,CAC5B8C,QAAUL,EAAW,QAAU,OAC/BM,WAAaN,EAAW,IAAM,IAGlC,OACI,sBAAK3D,UAAU,WAAf,UACI,sBAAKA,UAAU,SAAf,UACI,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,CAAc+C,KAAK,OACnB,4CAEJ,cAAC,WAASxB,IAAV,CACIC,MAAOqC,EACPtD,QAAS,kBAAMqD,GAAaD,IAC5B3D,UAAU,OAHd,SAKI,+BACI,cAAC,IAAD,CAAS+C,KAAK,cAI1B,cAAC,WAASxB,IAAV,CAAcC,MAAOuC,EAAe/D,UAAU,QAA9C,SAEQgD,EAAc/F,KAAK,SAAAiH,GAAI,OACnB,qBACIlE,UAAU,OAEVO,QAAU,kBAAMtE,EAAmBiI,IAHvC,SAKKA,GAHIA,Y,SCtBlBC,MAtBf,YAAgG,IAA1EzC,EAAyE,EAAzEA,aAAcC,EAA2D,EAA3DA,QAAS1C,EAAkD,EAAlDA,MAAOmF,EAA2C,EAA3CA,SAAUrD,EAAiC,EAAjCA,aAAcsD,EAAmB,EAAnBA,kBAExE,OACI,uBAAM9B,SAAUb,EAAc1B,UAAU,cAAxC,UACI,6BAAK2B,IACL,uBACI1C,MAAOA,EACPwD,SAAU,SAAC/C,GAAD,OAAO0E,EAAS1E,EAAEE,OAAOX,QACnCuD,KAAK,OACLE,YAAY,kBACZC,WAAS,IAEb,wBAAQ3C,UAAU,SAASsE,KAAK,SAAS/D,QAAS,kBAAMQ,GAAa,IAArE,oBAGA,wBAAQf,UAAU,UAAlB,SACKqE,Q,SC8CFE,MAzDf,WAAwB,MAEcxI,oBAAS,GAFvB,mBAEb+E,EAFa,KAEFC,EAFE,OAGkBhF,mBAAS,IAH3B,mBAGb6B,EAHa,KAGA4G,EAHA,KAIZnI,EAAQgD,qBAAW3D,GAAnBW,IAgCR,OACI,sBAAK2D,UAAU,gBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,sBAAMO,QAAS,kBAAMQ,GAAa,IAAlC,SACI,cAAC,IAAD,CAAMgC,KAAK,WAGnB,cAAC,EAAD,CAAOjC,UAAWA,EAAWC,aAAcA,EAA3C,SACI,cAAC,EAAD,CACIW,aAvChB,SAAsBhC,GAClBA,EAAE2D,iBAEehH,GACOpB,EAAS0B,YAAYC,WAArB,YAIH2G,IACG,CACI1F,KAAOD,EACPO,OAAQ9B,IAIxB0E,GAAa,GACrByD,EAAe,KAwBP7C,QAAQ,eACR1C,MAAOrB,EACPwG,SAAUI,EACVzD,aAAcA,EACdsD,kBAAkB,wB,kBCevBI,MAnEf,YAAgD,IAAxBjH,EAAuB,EAAvBA,QAASuD,EAAc,EAAdA,aAAc,EAEChF,mBAASyB,EAAQK,MAFlB,mBAEpC6G,EAFoC,KAEpBC,EAFoB,OAKUtF,qBAAW3D,GAAxDM,EALmC,EAKnCA,gBAAiBC,EALkB,EAKlBA,mBAAoBI,EALF,EAKEA,IAgD7C,OACI,qBAAK2D,UAAU,gBAAf,SACI,cAAC,EAAD,CACI0B,aAXZ,SAAsBhC,GAClBA,EAAE2D,iBAtCgB,SAAC7F,EAASkH,GAC5B,IAAME,EAAc3J,EAAS0B,YAAYC,WAAW,YAC9CiI,EAAW5J,EAAS0B,YAAYC,WAArB,gBAAyCP,EAAzC,WAEFyI,EAAmBtH,EAA1BK,KAER+G,EACKG,MAAM,OAAQ,KAAML,GACpBM,MACAC,MAAM,SAAAC,GAECN,EACK1H,IAAIM,EAAQL,IACZgI,OAAO,CACJtH,KAAO6G,IAEVO,MAAM,WACHJ,EACKE,MAAM,cAAe,KAAMD,GAC3BE,MACAC,MAAM,SAAAC,GACHA,EAAcE,SAAS,SAAAlI,GACnBA,EAAI+C,IAAIkF,OAAO,CACXvH,YAAc8G,UAIzBO,MAAM,WACAjJ,IAAoB8I,GACnB7I,EAAmByI,YAWnDW,CAAc7H,EAASkH,GAEvB3D,GAAa,IAOLY,QAAQ,qBACR1C,MAAOyF,EACPN,SAAUO,EACV5D,aAAcA,EACdsD,kBAAkB,eC4BnBiB,MAtFf,YAAkC,IAAhB9H,EAAe,EAAfA,QAAS+H,EAAM,EAANA,KAAM,EAEwClG,qBAAW3D,GAAxEI,EAFqB,EAErBA,eAAgBE,EAFK,EAELA,gBAAiBC,EAFZ,EAEYA,mBAAoBI,EAFhC,EAEgCA,IAFhC,EAKKN,oBAAS,GALd,mBAKtB+E,EALsB,KAKXC,EALW,KAiCvByE,EAAStE,oBAAU,CACrBuE,KAAO,CAAEC,UAAY,QAASvE,QAAU,GACxCwE,GAAK,CAAED,UAAY,MAAOvE,QAAU,KAElCyE,EAAiBC,wBAAcN,EAAM,CACvCE,KAAO,CAAEtE,QAAU,EAAG2E,MAAQ,SAC9BC,MAAQ,CAAE5E,QAAU,EAAG2E,MAAQ,OAC/BE,MAAQ,CAAE7E,QAAU,EAAG2E,MAAQ,WAGnC,OACI,eAAC,WAASvE,IAAV,CAAcC,MAAOgE,EAAQxF,UAAU,UAAvC,UACI,qBACIA,UAAU,OACVO,QAAU,kBAAMtE,EAAmBuB,EAAQK,OAF/C,SAIKL,EAAQK,OAEb,qBAAKmC,UAAU,OAAf,SAEQ4F,GAAe,SAACK,EAAOC,GAAR,OACXA,EACA,eAAC,WAAS3E,IAAV,CAAcC,MAAOyE,EAAOjG,UAAU,cAAtC,UACI,sBACIA,UAAU,OACVO,QAAU,kBAAMQ,GAAa,IAFjC,SAII,cAAC,IAAD,CAAQgC,KAAK,SAEjB,sBACI/C,UAAU,SACVO,QAAU,kBAzDhB,SAAA/C,GAClBvC,EACK0B,YACAC,WAAW,YACXM,IAAIM,EAAQL,IACZgJ,SACAlB,MAAM,WACHhK,EACK0B,YACAC,WAFL,gBAEyBP,EAFzB,WAGK0I,MAAM,cAAe,KAAMvH,EAAQK,MACnCmH,MACAC,MAAM,SAACC,GACJA,EAAcE,SAAS,SAAAlI,GACnBA,EAAI+C,IAAIkG,kBAIvBlB,MAAM,WACCjJ,IAAoBwB,EAAQK,MAC5B5B,EAAmBH,MAqCSsK,CAAc5I,IAFlC,SAII,cAAC,IAAD,CAASuF,KAAK,YAIC,IAAvBvF,EAAQC,WACR,GAEA,cAAC,WAAS8D,IAAV,CAAcC,MAAOyE,EAAOjG,UAAU,cAAtC,SACKxC,EAAQC,kBAKzB,cAAC,EAAD,CAAOqD,UAAWA,EAAWC,aAAcA,EAA3C,SACI,cAAC,EAAD,CAAevD,QAASA,EAASuD,aAAcA,UCrBhDsF,MA5Df,WAAoB,IAAD,EACiBtK,oBAAS,GAD1B,mBACR4H,EADQ,KACEC,EADF,OAES7H,oBAAS,GAFlB,mBAERwJ,EAFQ,KAEFe,EAFE,KAGTC,EAAchB,EAAO,UAAY,UAHxB,EAOWlG,qBAAW3D,GAA7B4B,EAPO,EAOPA,SAAUjB,EAPH,EAOGA,IAGZwH,EAAO3C,oBAAU,CACnB4C,UAAYH,EAAW,eAAiB,iBACxCtC,OAAS,CAAEC,SAAW,MAGpByC,EAAgB7C,oBAAU,CAC5B8C,QAAUL,EAAW,QAAU,OAC/BM,WAAaN,EAAW,IAAM,IAGlC,OACI,sBAAK3D,UAAU,WAAf,UACI,sBAAKA,UAAU,SAAf,UACI,sBAAKA,UAAU,QAAf,UACI,cAAC,IAAD,CAAS+C,KAAK,OACd,4CAEJ,sBAAK/C,UAAU,OAAf,UAEQ2D,GAAYrG,EAASS,OAAS,GAC9B,sBAAMiC,UAAU,OAAOO,QAAU,kBAAM+F,GAAQ,SAAAf,GAAI,OAAKA,MAAxD,SACI,cAAC,IAAD,CAAYxC,KAAK,KAAKD,MAAOyD,MAGrC,cAAC,EAAD,IACA,cAAC,WAASC,KAAV,CACIxG,UAAU,QACVO,QAAS,kBAAMqD,GAAaD,IAC5BnC,MAAOqC,EAHX,SAKI,cAAC,IAAD,CAASd,KAAK,eAI1B,cAAC,WAASxB,IAAV,CAAcC,MAAOuC,EAAe/D,UAAU,QAA9C,SAGQ1C,EAASI,QAAO,SAAA0F,GAAI,OAAIA,EAAKlF,QAAU7B,KAAKY,KAAK,SAAAO,GAAO,OACpD,cAAC,EAAD,CACIA,QAASA,EAET+H,KAAMA,GADD/H,EAAQL,a,oCCuE1BsJ,MAzHf,YAAsB,IAAP9I,EAAM,EAANA,KAAM,EAES5B,oBAAS,GAFlB,mBAEV2K,EAFU,KAEHC,EAFG,OAK8BtH,qBAAW3D,GAAlDS,EALS,EAKTA,aAAcC,EALL,EAKKA,gBAAiBC,EALtB,EAKsBA,IAsCjCuK,EAAe,SAACjJ,IApCH,SAAAA,GACf1C,EACK0B,YACAC,WAFL,gBAEyBP,EAFzB,WAGKa,IAAIS,EAAKR,IACTgJ,SAgCLU,CAAWlJ,GACRxB,IAAiBwB,GAChBvB,GAAgB,IAKlBoJ,EAAStE,oBAAU,CACrBuE,KAAO,CAAEC,UAAY,QAASvE,QAAU,GACxCwE,GAAK,CAAED,UAAY,MAAOvE,QAAU,KAGlC2F,EAAmBjB,wBAAclI,EAAKG,QAAS,CACjD2H,KAAO,CAAEsB,SAAW,WAAYjD,UAAY,YAC5CiC,MAAQ,CAAEjC,UAAY,YACtBkC,MAAQ,CAAElC,UAAY,cAG1B,OACI,cAAC,WAASvC,IAAV,CAAcC,MAAOgE,EAAQxF,UAAU,OAAvC,SACI,sBACIA,UAAU,iBACVgH,aAAc,kBAAML,GAAS,IAC7BM,aAAc,kBAAMN,GAAS,IAHjC,UAKI,qBACI3G,UAAU,aACVO,QAAU,kBAxDR,SAAA5C,GACd1C,EACK0B,YACAC,WAFL,gBAEyBP,EAFzB,WAGKa,IAAIS,EAAKR,IACTgI,OAAO,CACJrH,SAAWH,EAAKG,UAkDIoJ,CAAUvJ,IAF9B,SAKQmJ,GAAiB,SAACb,EAAOnI,GAAR,OACbA,EACA,cAAC,WAAS0I,KAAV,CAAehF,MAAOyE,EAAOjG,UAAU,UAAvC,SACI,cAAC,IAAD,CAAiB8C,MAAM,cAG3B,cAAC,WAAS0D,KAAV,CAAehF,MAAOyE,EAAOjG,UAAU,YAAvC,SACI,cAAC,IAAD,CAAQ8C,MAAOnF,EAAKmF,eAKpC,sBACI9C,UAAU,OACVO,QAAU,kBAAMnE,EAAgBuB,IAFpC,UAII,mBAAG6D,MAAO,CAACsB,MAAQnF,EAAKG,QAAU,UAAY,WAA9C,SAA2DH,EAAKiE,OAChE,iCAAOjE,EAAKqE,KAAZ,MAAqBrE,EAAKC,YAA1B,MAA0CD,EAAKe,QAC/C,qBAAKsB,UAAS,eAAUrC,EAAKG,QAAU,eAAiB,SAE5D,qBACIkC,UAAU,kBACVO,QAAS,kBAvEH,SAAA5C,GAClB,IAAMwJ,EAAc3I,IAAOb,EAAKe,KAAM,cAAc6E,IAAI,EAAG,QAErD6D,EAAY,2BACXzJ,GADW,IAEde,KAAOyI,EAAY1I,OAAO,cAC1BqD,IAAMqF,EAAY1I,OAAO,KACzBX,SAAU,WAGPsJ,EAAajK,GAEpBlC,EACK0B,YACAC,WAFL,gBAEyBP,EAFzB,WAGKkH,IAAI6D,GAwDkBC,CAAc1J,IAFjC,SAKQA,EAAKG,SACL,+BACI,cAAC,IAAD,QAIZ,qBACIkC,UAAU,cACVO,QAAU,kBAAMqG,EAAajJ,IAFjC,UAKS+I,GAAS/I,EAAKG,UACf,+BACI,cAAC,IAAD,cClEbwJ,OAjDf,YAA+B,IAAV/K,EAAS,EAATA,MAAS,EACQR,mBAAS,IADjB,mBACnBwL,EADmB,KACRC,EADQ,KAoB1B,OAjBA/K,qBAAU,WACN,IAEMgL,EAFO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEdxK,KAAI,SAAA6E,GAC9B,MAAO,CACHvF,MAAOA,EAAMmB,QAAO,SAAAC,GAAI,OAAIA,EAAKmE,MAAQA,KACzC4F,OAAQ5F,MAIV6F,EAAQC,SAASpJ,MAASC,OAAO,MAEjCoJ,EAAcJ,EAAiBK,MAAMH,GAAOI,OAAON,EAAiBK,MAAM,EAAGH,IAEnFH,EAAaK,KACd,CAACtL,IAGA,qBAAKyD,UAAU,YAAf,SAEQuH,EAAUtK,KAAI,SAAA6E,GAAG,OACb,gCACI,sBAAK9B,UAAU,MAAf,UACI,sBAAKA,UAAU,OAAf,UACKxB,IAAOsD,EAAI4F,OAAQ,KAAKjJ,OAAO,QAC/BqD,EAAI4F,SAAWlJ,MAASC,OAAO,MAAQ,cAE5C,sBAAKuB,UAAU,cAAf,cACM8B,EAAIvF,MAAMwB,OADhB,UAIJ,qBAAKiC,UAAU,QAAf,SAEQ8B,EAAIvF,MAAMU,KAAI,SAAAU,GAAI,OACd,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKR,WAbtB2E,EAAI4F,cCDnBM,OAtBf,WAAiB,IAAD,EACuB3I,qBAAW3D,GAAtCa,EADI,EACJA,MAAOP,EADH,EACGA,gBAEf,OACI,sBAAKgE,UAAU,QAAf,UACI,qBAAKA,UAAU,mBAAf,SACKhE,IAEL,qBAAKgE,UAAU,QAAf,SAEwB,gBAApBhE,EACA,cAAC,GAAD,CAAWO,MAAOA,IAElBA,EAAMU,KAAK,SAAAU,GAAI,OACX,cAAC,EAAD,CAAMA,KAAMA,GAAWA,EAAKR,aC0DjC8K,OAvEf,WAAmB,MAEgC5I,qBAAW3D,GAAnCiC,EAFR,EAEPxB,aAAqBmB,EAFd,EAEcA,SAAUjB,EAFxB,EAEwBA,IAFxB,EAKSN,mBAAS,IALlB,mBAKR6F,EALQ,KAKFC,EALE,OAMO9F,mBAAS,IAAImH,MANpB,mBAMRpB,EANQ,KAMHC,EANG,OAOShG,mBAAS,IAAImH,MAPtB,mBAORlB,EAPQ,KAOFC,EAPE,OAQuBlG,mBAAS,IARhC,mBAQRmG,EARQ,KAQKC,EARL,KAUf1F,qBAAU,WACHkB,IACCkE,EAAQlE,EAAKiE,MACbG,EAAOvD,IAAOb,EAAKe,KAAM,eACzBuD,EAAQzD,IAAOb,EAAKqE,KAAM,YAC1BG,EAAexE,EAAKC,gBAEzB,CAACD,IAEJlB,qBAAW,WACJkB,GACC1C,EACK0B,YACAC,WAFL,gBAEyBP,EAFzB,WAGKa,IAAIS,EAAKR,IACTgI,OAAO,CACJvD,OACAlD,KAAOF,IAAOsD,GAAKrD,OAAO,cAC1BqD,IAAMtD,IAAOsD,GAAKrD,OAAO,KACzBuD,KAAOxD,IAAOwD,GAAMvD,OAAO,WAC3Bb,YAAcsE,MAG3B,CAACN,EAAME,EAAKE,EAAME,IAOrB,IAAIiB,EAAmB7F,EAASI,QAAO,SAAA0F,GAAI,OAAIA,EAAKlF,QAAU7B,KAG9D,OACI,8BAEQsB,GACA,sBAAKqC,UAAU,WAAf,UACI,qBAAKA,UAAU,SAAf,uBAGA,qBAAKA,UAAU,YAAf,SACI,cAAC,EAAD,CACI0B,aAlBxB,SAAsBhC,KAmBEkC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,OAAQA,EACRC,KAAMA,EACNC,QAASA,EACTC,YAAaA,EACbC,eAAgBA,EAChB7E,SAAU6F,YCzCvB+E,GAjBE,WACb,OACI,qCACA,eAAC,EAAD,WACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,eAAC,EAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,W,UCrBO,OAA0B,iCCqE1BC,GArDF,WAAO,IAAD,EAEQ9I,qBAAW3D,GAAvBY,GAFI,EAETD,IAFS,EAEJC,aAEwBJ,GAAlCwE,aAAa0H,QAAQ,UACtB9L,EAAOoE,aAAa0H,QAAQ,WAG5BtI,QAAQC,IAAI,WAGd,IAXiB,EAoBHsI,aAAa5M,GAArB6M,EApBW,oBAsBjB,OAEE,qBAAKtI,UAAU,MAAf,SAEFsI,EAEG,cAAC,GAAD,IAEA,qCACA,qBAAKtI,UAAU,QAAf,SACW,gGAEd,0BAAS7C,GAAG,YAAZ,UACA,oDACA,sBAAKoD,QAzBS,WAEd9E,EAAK8M,gBAAgB,IAAItN,EAASQ,KAAK+M,oBACvCvD,MAAK,SAACwD,GACNnM,EAAQmM,EAASH,KAAKI,IAAMhI,aAAaiI,QAAQ,SAAUF,EAASH,KAAKI,UAqBpD1I,UAAU,aAA/B,UACA,qBAAKA,UAAU,sBAAf,SACE,qBAAKA,UAAU,cAAcI,IAAI,kFAEnC,mBAAGJ,UAAU,WAAb,SAAwB,gEAE1B,mBAAGA,UAAU,OAAb,8LAEE,qBAAKI,IAAKwI,cChDGC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB9D,MAAK,YAAkD,IAA/C+D,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC1N,EAAD,UACE,cAAC,GAAD,MAEF0D,SAASiK,eAAe,SAM1BV,O","file":"static/js/main.efaab624.chunk.js","sourcesContent":["import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/auth'\r\n\r\n\r\n\r\n\r\n  const firebaseConfig = {\r\n    apiKey: \"AIzaSyCEbLpFzh1MNMzMyxCkYwl8HQ_4v2-B_OY\",\r\n    authDomain: \"todo-app-d29df.firebaseapp.com\",\r\n    projectId: \"todo-app-d29df\",\r\n    storageBucket: \"todo-app-d29df.appspot.com\",\r\n    messagingSenderId: \"895052913366\",\r\n    appId: \"1:895052913366:web:e5ddf5832ad2c1f0f24777\"\r\n  };\r\n\r\n  firebase.initializeApp(firebaseConfig)\r\n\r\n export const auth = firebase.auth()\r\n\r\n  export default firebase","import React, { createContext, useState } from 'react'\r\nimport { useTodos, useProjects, useFilterTodos, useProjectsWithStats } from '../hooks'\r\n\r\nconst TodoContext = createContext()\r\n\r\nfunction TodoContextProvider({children}){\r\n    const defaultProject = 'today'\r\n    const [selectedProject, setSelectedProject] = useState(defaultProject)\r\n    const [selectedTodo, setSelectedTodo] = useState(undefined)\r\n    const [UID, setUID] = useState()\r\n    const todos = useTodos(UID)\r\n    const projects = useProjects(todos)\r\n    const projectsWithStats = useProjectsWithStats(todos, projects)\r\n    const filteredTodos = useFilterTodos(todos, selectedProject, UID)\r\n\r\n \r\n\r\n\r\n   \r\n   \r\n\r\n    return (\r\n        <TodoContext.Provider\r\n            value={\r\n                {   \r\n                    UID,\r\n                    setUID,\r\n                    defaultProject,\r\n                    selectedProject,\r\n                    setSelectedProject,\r\n                    todos : filteredTodos,\r\n                    projects : projectsWithStats,\r\n                    selectedTodo,\r\n                    setSelectedTodo\r\n                }\r\n            }\r\n        >\r\n            {children}\r\n        </TodoContext.Provider>\r\n    )\r\n}\r\n\r\nexport { TodoContextProvider, TodoContext }","import moment from 'moment'\r\nimport { useState, useEffect } from 'react'\r\nimport firebase from '../firebase'\r\n\r\n\r\n\r\n\r\n\r\nexport function useTodos(UID){\r\n    const [todos, setTodos] = useState([])\r\n\r\n    useEffect(() => {  \r\n     \r\n        let unsubscribe = firebase\r\n        .firestore()\r\n        .collection(`users/${UID}/todos`)\r\n        .onSnapshot( snapshot => {\r\n            const data = snapshot.docs.map( doc => {\r\n                return {\r\n                    id : doc.id,\r\n                    ...doc.data()\r\n                }\r\n            })\r\n            setTodos(data)\r\n        })\r\n\r\n        \r\n      \r\n          \r\n\r\n        return () => unsubscribe()\r\n    }, [UID])\r\n\r\n    return todos\r\n}\r\n\r\nexport function useFilterTodos(todos, selectedProject, UID){\r\n    const [filteredTodos, setFilteredTodos] = useState([])\r\n\r\n    useEffect( () => {\r\n        let data;\r\n        const todayDateFormated = moment().format('DD/MM/YYYY')\r\n\r\n        if(selectedProject === 'today'){\r\n            data = todos.filter(todo => todo.date === todayDateFormated)\r\n        }else if(selectedProject === 'next 7 days'){\r\n            data = todos.filter(todo => {\r\n                const todoDate = moment(todo.date, 'DD/MM/YYYY')\r\n                const todayDate = moment(todayDateFormated, 'DD/MM/YYYY')\r\n\r\n                const diffDays = todoDate.diff(todayDate, 'days')\r\n\r\n                return diffDays >=0 && diffDays < 7\r\n            })\r\n        }else if( selectedProject === 'all days'){\r\n            data = todos\r\n        }else{\r\n            data = todos.filter(todo => todo.projectName === selectedProject)\r\n        }\r\n\r\n      \r\n\r\n        setFilteredTodos(data)\r\n    }, [todos, selectedProject])\r\n\r\n    return filteredTodos\r\n}\r\n\r\nexport function useProjects(){\r\n    const [projects, setProjects] = useState([])\r\n\r\n    useEffect(() => {\r\n        let unsubscribe = firebase\r\n        .firestore()\r\n        .collection('projects')\r\n        .onSnapshot( snapshot => {\r\n            const data = snapshot.docs.map( doc => {\r\n                return {\r\n                    userID: doc.data().UserId,\r\n                    id : doc.id,\r\n                    name : doc.data().name,\r\n                }\r\n            })\r\n            setProjects(data)\r\n        })\r\n\r\n        return () => unsubscribe()\r\n    }, [])\r\n\r\n    return projects\r\n}\r\n\r\nexport function useProjectsWithStats(todos, projects){\r\n    const [projectsWithStats, setProjectsWithStats] = useState([])\r\n\r\n    useEffect( () => {\r\n        const data = projects.map( project => {\r\n            return {\r\n                numOfTodos : todos.filter( todo => todo.projectName === project.name && !todo.checked ).length,\r\n                ...project\r\n            }\r\n        })\r\n        \r\n        setProjectsWithStats(data)\r\n    }, [todos, projects])\r\n\r\n    return projectsWithStats\r\n}","import React, { useContext, useEffect, useRef } from 'react'\r\nimport { TodoContext } from '../context'\r\n\r\nfunction Sidebar({ children }){\r\n    // REF\r\n    const sidebarRef = useRef()\r\n\r\n    // CONTEXT\r\n    const { setSelectedTodo } = useContext(TodoContext)\r\n\r\n    // DOCUMENT CLICK LISTENER\r\n    useEffect(() => {\r\n        document.addEventListener('click', handleClick)\r\n        \r\n        return () => document.removeEventListener('click', handleClick)\r\n    }, [])\r\n    \r\n    // HANDLE CLICK\r\n    const handleClick = e => {\r\n      \r\n\r\n        if(sidebarRef.current == null)\r\n        {\r\n            console.log(\"null\")\r\n            return\r\n        }\r\n        else if\r\n        ( e.target === sidebarRef.current || sidebarRef.current.contains(e.target)){\r\n            setSelectedTodo(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className='Sidebar'\r\n            ref={sidebarRef}\r\n        >\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React from 'react'\r\n\r\nfunction Main({ children }){\r\n\r\n    return (\r\n        <div className='Main'>\r\n            {children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main","export default __webpack_public_path__ + \"static/media/frog.daaed11b.png\";","import React,{ useContext }from 'react'\r\nimport frog from \"../images/frog.png\"\r\nimport { getAuth, signOut } from \"firebase/auth\"\r\nimport { TodoContext } from '../context'\r\n\r\nfunction User(){\r\n\r\n  const { UID, setUID  } = useContext(TodoContext)\r\n\r\n\r\n\r\n    const Logout = () =>{\r\n        const auth = getAuth();\r\n        signOut(auth)\r\n        setUID(undefined)\r\n        localStorage.removeItem('UserId');\r\n    }\r\n\r\n    return (\r\n        <div className='User'>\r\n            <div className=\"logo\">\r\n                <img src={frog} alt=\"logo\" />\r\n            </div>\r\n            <div className='info'>\r\n                <p>Alex Tran's TODO</p>\r\n                <a onClick={Logout} href=\"#\">Logout!</a>\r\n            </div>\r\n            <div className='small'>\r\n                <h1> Sorry this application is not supported on smaller screens!</h1>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default User","import React, {useRef} from 'react'\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nfunction Modal({children, showModal, setShowModal}){\r\n    const modalRef = useRef()\r\n\r\n    const closeModal = (e) => {\r\n        if(e.target === modalRef.current){\r\n            setShowModal(false)\r\n        }\r\n    }\r\n\r\n    // ANIMATION\r\n    const modalAnimation = useSpring({\r\n        opacity : showModal ? 1 : 0,\r\n        top : showModal ? '25%' : '0%',\r\n        config : { friction : 10 }\r\n    })\r\n    \r\n    return (\r\n        showModal &&\r\n        <div className=\"Modal\" ref={modalRef} onClick={closeModal}>\r\n            <animated.div style={modalAnimation} className=\"container\">\r\n                {children}\r\n            </animated.div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal","import React from 'react'\r\nimport { Bell, CalendarDay, Clock, Palette, X } from 'react-bootstrap-icons'\r\nimport { DatePicker, TimePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\n\r\nfunction TodoForm({\r\n    handleSubmit,\r\n    heading = false,\r\n    text, setText,\r\n    day, setDay,\r\n    time, setTime,\r\n    todoProject, setTodoProject,\r\n    projects,\r\n    showButtons = false,\r\n    setShowModal = false\r\n}){\r\n\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <form onSubmit={handleSubmit} className='TodoForm'>\r\n                <div className=\"text\">\r\n                    {\r\n                        heading && \r\n                        <h3>{heading}</h3>\r\n                    }\r\n                    <input\r\n                        type='text'\r\n                        value={text}\r\n                        onChange={e => setText(e.target.value)}\r\n                        placeholder='To do ...'\r\n                        autoFocus\r\n                    />\r\n                </div>\r\n                <div className=\"remind\">\r\n                    <Bell />\r\n                    <p>Remind Me!</p>\r\n                </div>\r\n                <div className=\"pick-day\">\r\n                    <div className=\"title\">\r\n                        <CalendarDay />\r\n                        <p>Choose a day</p>\r\n                    </div>\r\n                    <DatePicker\r\n                        value={day}\r\n                        onChange={day => setDay(day)}\r\n                    />\r\n                </div>\r\n                <div className=\"pick-time\">\r\n                    <div className=\"title\">\r\n                        <Clock />\r\n                        <p>Choose time</p>\r\n                    </div>\r\n                    <TimePicker\r\n                        value={time}\r\n                        onChange={time => setTime(time)}\r\n                    />\r\n                </div>\r\n                <div className=\"pick-project\">\r\n                    <div className=\"title\">\r\n                        <Palette />\r\n                        <p>Choose a project</p>\r\n                    </div>\r\n                    <div className=\"projects\">\r\n                        {\r\n                            projects.length > 0 ?\r\n                            projects.map( project => \r\n                                <div\r\n                                    className={`project ${todoProject === project.name ? \"active\" : \"\"}`}\r\n                                    onClick={() => setTodoProject(project.name)}\r\n                                    key={project.id}\r\n                                >\r\n                                    {project.name}\r\n                                </div>    \r\n                            )\r\n                            :\r\n                            <div style={{color:'#ff0000'}}>\r\n                                Please add a project before proceeding\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {\r\n                    showButtons &&\r\n                    <div>\r\n                        <div className=\"cancel\" onClick={() => setShowModal(false)}>\r\n                            <X size='40' />\r\n                        </div>\r\n                        <div className=\"confirm\">\r\n                            <button>+ Add to do</button>\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </form>\r\n        </MuiPickersUtilsProvider>\r\n    )\r\n}\r\n\r\nexport default TodoForm","export const calendarItems = ['today', 'next 7 days', 'all days']","import React, {useContext, useEffect, useState} from 'react'\r\nimport Modal from './Modal'\r\nimport TodoForm from './TodoForm'\r\nimport { TodoContext } from '../context'\r\nimport { calendarItems } from '../constants'\r\nimport firebase from '../firebase'\r\nimport moment from 'moment'\r\nimport randomcolor from 'randomcolor'\r\n\r\n\r\nfunction AddNewTodo(){\r\n    // CONTEXT\r\n    const { projects, selectedProject, UID } = useContext(TodoContext)\r\n   \r\n    \r\n    // STATE\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState(new Date())\r\n    const [time, setTime] = useState(new Date())\r\n    const [todoProject, setTodoProject] = useState(selectedProject)\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n\r\n        if( text && !calendarItems.includes(todoProject)){\r\n            firebase\r\n                .firestore()\r\n                .collection(`users/${UID}/todos`)\r\n                .add(\r\n                    {\r\n                        text : text,\r\n                        date : moment(day).format('DD/MM/YYYY'),\r\n                        day : moment(day).format('d'),\r\n                        time : moment(time).format('hh:mm A'),\r\n                        checked : false,\r\n                        color : randomcolor({luminosity : 'dark'}),\r\n                        projectName : todoProject,\r\n                    }\r\n                )\r\n\r\n            setShowModal(false)\r\n            setText('')\r\n            setDay(new Date())\r\n            setTime(new Date())\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        setTodoProject(selectedProject)\r\n    }, [selectedProject])\r\n\r\n   \r\n    var filteredProjects = projects.filter(proj => proj.userID == UID);\r\n\r\n\r\n    return (\r\n        <div className='AddNewTodo'>\r\n            <div className=\"btn\">\r\n                <button onClick={() => setShowModal(true)}>\r\n                    + New Todo\r\n                </button>\r\n            </div>\r\n            <Modal showModal={showModal} setShowModal={setShowModal}>\r\n                <TodoForm\r\n                    handleSubmit={handleSubmit}\r\n                    heading='Add new to do!'\r\n                    text={text}\r\n                    setText={setText}\r\n                    day={day}\r\n                    setDay={setDay}\r\n                    time={time}\r\n                    setTime={setTime}\r\n                    todoProject={todoProject}\r\n                    setTodoProject={setTodoProject}\r\n                    projects={filteredProjects}\r\n                    showButtons={true}\r\n                    setShowModal={setShowModal}\r\n                />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewTodo","import React, { useContext, useState } from 'react'\r\nimport { CalendarDate, CaretUp } from 'react-bootstrap-icons'\r\nimport { calendarItems } from '../constants'\r\nimport { TodoContext } from '../context'\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nfunction Calendar(){\r\n    // SATATE\r\n    const [showMenu, setShowMenu] = useState(true)\r\n\r\n    // CONTEXT\r\n    const { setSelectedProject } = useContext(TodoContext)\r\n    \r\n    // ANIMATION\r\n    const spin = useSpring({\r\n        transform : showMenu ? 'rotate(0deg)' : 'rotate(180deg)',\r\n        config : { friction : 10 }\r\n    })\r\n\r\n    const menuAnimation = useSpring({\r\n        display : showMenu ? 'block' : 'none',\r\n        lineHeight : showMenu ? 1.2 : 0\r\n    })\r\n\r\n    return (\r\n        <div className='Calendar'>\r\n            <div className=\"header\">\r\n                <div className=\"title\">\r\n                    <CalendarDate size=\"18\"/>\r\n                    <p>Calendar</p>\r\n                </div>\r\n                <animated.div\r\n                    style={spin}\r\n                    onClick={() => setShowMenu(!showMenu)}\r\n                    className=\"btns\"\r\n                >\r\n                    <span>\r\n                        <CaretUp size=\"20\" />\r\n                    </span>\r\n                </animated.div>\r\n            </div>\r\n            <animated.div style={menuAnimation} className=\"items\">\r\n                {\r\n                    calendarItems.map( item => \r\n                        <div\r\n                            className=\"item\"\r\n                            key={item}\r\n                            onClick={ () => setSelectedProject(item)}\r\n                        >\r\n                            {item}\r\n                        </div>\r\n                    )\r\n                }\r\n            </animated.div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Calendar","import React from 'react'\r\n\r\nfunction ProjectForm({handleSubmit, heading, value, setValue, setShowModal, confirmButtonText}){\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className='ProjectForm'>\r\n            <h3>{heading}</h3>\r\n            <input\r\n                value={value}\r\n                onChange={(e) => setValue(e.target.value)}\r\n                type='text'\r\n                placeholder='project name...'\r\n                autoFocus\r\n            />\r\n            <button className='cancel' role='button' onClick={() => setShowModal(false)}>\r\n                cancel\r\n            </button>\r\n            <button className=\"confirm\">\r\n                {confirmButtonText}\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default ProjectForm","import React, {useContext, useState} from 'react'\r\nimport Modal from './Modal'\r\nimport ProjectForm from './ProjectForm'\r\nimport { Plus } from 'react-bootstrap-icons'\r\nimport firebase from '../firebase'\r\nimport { TodoContext } from '../context'\r\n\r\nfunction AddNewProject(){\r\n    // STATE\r\n    const [showModal, setShowModal] = useState(false)\r\n    const [projectName, setProjectName] = useState('')\r\n    const { UID } = useContext(TodoContext)\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n\r\n        if( projectName, UID ){\r\n            const projectsRef = firebase.firestore().collection(`projects`)\r\n\r\n            projectsRef\r\n               \r\n                            .add(\r\n                                {\r\n                                    name : projectName,\r\n                                    UserId: UID\r\n                                }\r\n                            )\r\n                    } \r\n                    setShowModal(false)\r\n            setProjectName('') \r\n         \r\n                }\r\n                \r\n           \r\n            \r\n    \r\n\r\n     \r\n      \r\n   \r\n\r\n    \r\n\r\n    return (\r\n        <div className='AddNewProject'>\r\n            <div className=\"add-button\">\r\n                <span onClick={() => setShowModal(true)}>\r\n                    <Plus size=\"20\" />\r\n                </span>\r\n            </div>\r\n            <Modal showModal={showModal} setShowModal={setShowModal}>\r\n                <ProjectForm\r\n                    handleSubmit={handleSubmit}\r\n                    heading='New project!'\r\n                    value={projectName}\r\n                    setValue={setProjectName}\r\n                    setShowModal={setShowModal}\r\n                    confirmButtonText='+ Add Project'\r\n                />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddNewProject","import React, {useContext, useState} from 'react'\r\nimport ProjectForm from './ProjectForm'\r\nimport firebase from '../firebase'\r\nimport { TodoContext } from '../context'\r\n\r\nfunction RenameProject({project, setShowModal}){\r\n    // STATE\r\n    const [newProjectName, setNewProjectName] = useState(project.name)\r\n\r\n    // CONTEXT\r\n    const { selectedProject, setSelectedProject, UID } = useContext(TodoContext)\r\n\r\n    // rename Project\r\n    const renameProject = (project, newProjectName) => {\r\n        const projectsRef = firebase.firestore().collection('projects')\r\n        const todosRef = firebase.firestore().collection(`users/${UID}/todos`)\r\n\r\n        const { name : oldProjectName } = project\r\n\r\n        projectsRef\r\n            .where('name', '==', newProjectName)\r\n            .get()\r\n            .then( querySnapshot => {\r\n                {\r\n                    projectsRef\r\n                        .doc(project.id)\r\n                        .update({\r\n                            name : newProjectName\r\n                        })\r\n                        .then( () => {\r\n                            todosRef\r\n                                .where('projectName', '==', oldProjectName)\r\n                                .get()\r\n                                .then( querySnapshot => {\r\n                                    querySnapshot.forEach( doc => {\r\n                                        doc.ref.update({\r\n                                            projectName : newProjectName\r\n                                        })\r\n                                    })\r\n                                })\r\n                                .then( () => {\r\n                                    if(selectedProject === oldProjectName){\r\n                                        setSelectedProject(newProjectName)\r\n                                    }\r\n                                })\r\n                        })\r\n                }\r\n            })\r\n    }\r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault()\r\n\r\n        renameProject(project, newProjectName)\r\n\r\n        setShowModal(false)\r\n    }\r\n\r\n    return (\r\n        <div className='RenameProject'>\r\n            <ProjectForm\r\n                handleSubmit={handleSubmit}\r\n                heading='Edit project name!'\r\n                value={newProjectName}\r\n                setValue={setNewProjectName}\r\n                setShowModal={setShowModal}\r\n                confirmButtonText='Confirm'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RenameProject","import React, {useContext, useState} from 'react'\r\nimport { Pencil, XCircle } from 'react-bootstrap-icons'\r\nimport Modal from './Modal'\r\nimport RenameProject from './RenameProject'\r\nimport { TodoContext } from '../context'\r\nimport firebase from '../firebase'\r\nimport { useTransition, useSpring, animated } from 'react-spring'\r\n\r\nfunction Project({project, edit}){\r\n    // CONTEXT\r\n    const { defaultProject, selectedProject, setSelectedProject, UID } = useContext(TodoContext)\r\n\r\n    // STATE\r\n    const [showModal, setShowModal] = useState(false)\r\n\r\n    const deleteProject = project => {\r\n        firebase\r\n            .firestore()\r\n            .collection('projects')\r\n            .doc(project.id)\r\n            .delete()\r\n            .then( () => {\r\n                firebase\r\n                    .firestore()\r\n                    .collection(`users/${UID}/todos`)\r\n                    .where('projectName', '==', project.name)\r\n                    .get()\r\n                    .then( (querySnapshot) => {\r\n                        querySnapshot.forEach( doc => {\r\n                            doc.ref.delete()\r\n                        })\r\n                    })\r\n            })\r\n            .then( () => {\r\n                if( selectedProject === project.name ){\r\n                    setSelectedProject(defaultProject)\r\n                }\r\n            })\r\n    }\r\n\r\n    // ANIMATION\r\n    const fadeIn = useSpring({\r\n        from : { marginTop : '-12px', opacity : 0 },\r\n        to : { marginTop : '0px', opacity : 1}\r\n    })\r\n    const btnTransitions = useTransition(edit, {\r\n        from : { opacity : 0, right : '-20px' },\r\n        enter : { opacity : 1, right : '0px' },\r\n        leave : { opacity : 0, right : '-20px' }\r\n    })\r\n\r\n    return (\r\n        <animated.div style={fadeIn} className='Project'>\r\n            <div\r\n                className=\"name\"\r\n                onClick={ () => setSelectedProject(project.name)}\r\n            >\r\n                {project.name}\r\n            </div>\r\n            <div className=\"btns\">\r\n                {\r\n                    btnTransitions((props, editProject) => \r\n                        editProject ?\r\n                        <animated.div style={props} className=\"edit-delete\">\r\n                            <span\r\n                                className=\"edit\"\r\n                                onClick={ () => setShowModal(true)}\r\n                            >\r\n                                <Pencil size=\"13\" />\r\n                            </span>\r\n                            <span\r\n                                className=\"delete\"\r\n                                onClick={ () => deleteProject(project)}\r\n                            >\r\n                                <XCircle size=\"13\" />\r\n                            </span>\r\n                        </animated.div>\r\n                        :\r\n                        project.numOfTodos === 0 ?\r\n                        \"\"\r\n                        :\r\n                        <animated.div style={props} className=\"total-todos\">\r\n                            {project.numOfTodos}\r\n                        </animated.div>\r\n                    )\r\n                }\r\n            </div>\r\n            <Modal showModal={showModal} setShowModal={setShowModal}>\r\n                <RenameProject project={project} setShowModal={setShowModal}/>\r\n            </Modal>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default Project","import React, {useContext, useState} from 'react'\r\nimport { CaretUp, Palette, PencilFill } from 'react-bootstrap-icons'\r\nimport AddNewProject from './AddNewProject'\r\nimport Project from './Project'\r\nimport { TodoContext } from '../context'\r\nimport { useSpring, animated } from 'react-spring'\r\n\r\nfunction Projects(){\r\n    const [showMenu, setShowMenu] = useState(true);\r\n    const [edit, setEdit] = useState(false)\r\n    const pencilColor = edit ? \"#1EC94C\" : \"#000000\"\r\n    \r\n\r\n    // CONTEXT\r\n    const { projects, UID } = useContext(TodoContext)\r\n    \r\n    // ANIMATION\r\n    const spin = useSpring({\r\n        transform : showMenu ? 'rotate(0deg)' : 'rotate(180deg)',\r\n        config : { friction : 10 }\r\n    })\r\n\r\n    const menuAnimation = useSpring({\r\n        display : showMenu ? 'block' : 'none',\r\n        lineHeight : showMenu ? 1.2 : 0\r\n    })\r\n\r\n    return (\r\n        <div className='Projects'>\r\n            <div className=\"header\">\r\n                <div className=\"title\">\r\n                    <Palette size=\"18\" />\r\n                    <p>Projects</p>\r\n                </div>\r\n                <div className=\"btns\">\r\n                    {\r\n                        showMenu && projects.length > 0 &&\r\n                        <span className='edit' onClick={ () => setEdit(edit => !edit)}>\r\n                            <PencilFill size=\"15\" color={pencilColor}/>\r\n                        </span>\r\n                    }\r\n                    <AddNewProject />\r\n                    <animated.span\r\n                        className='arrow'\r\n                        onClick={() => setShowMenu(!showMenu)}\r\n                        style={spin}\r\n                    >\r\n                        <CaretUp size=\"20\" />\r\n                    </animated.span>\r\n                </div>\r\n            </div>\r\n            <animated.div style={menuAnimation} className=\"items\">\r\n                {\r\n\r\n                    projects.filter(proj => proj.userID == UID).map( project => \r\n                        <Project\r\n                            project={project}\r\n                            key={project.id}\r\n                            edit={edit}\r\n                        />\r\n                    )\r\n                }\r\n            </animated.div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Projects","import moment from 'moment'\r\nimport React, {useContext, useState} from 'react'\r\nimport { ArrowClockwise, CheckCircleFill, Circle, Trash } from 'react-bootstrap-icons'\r\nimport firebase from '../firebase'\r\nimport { TodoContext } from '../context'\r\nimport { useSpring, useTransition, animated } from 'react-spring'\r\n\r\nfunction Todo({todo}){\r\n    // STATE\r\n    const [hover, setHover] = useState(false)\r\n\r\n    // CONTEXT\r\n    const { selectedTodo, setSelectedTodo, UID } = useContext(TodoContext)\r\n\r\n    const deleteTodo = todo => {\r\n        firebase\r\n            .firestore()\r\n            .collection(`users/${UID}/todos`)\r\n            .doc(todo.id)\r\n            .delete()\r\n    }\r\n\r\n    const checkTodo = todo => {\r\n        firebase\r\n            .firestore()\r\n            .collection(`users/${UID}/todos`)\r\n            .doc(todo.id)\r\n            .update({\r\n                checked : !todo.checked\r\n            })\r\n    }\r\n\r\n    const repeatNextDay = todo => {  \r\n        const nextDayDate = moment(todo.date, 'DD/MM/YYYY').add(1, 'days')\r\n\r\n        const repeatedTodo = {\r\n            ...todo,\r\n            date : nextDayDate.format('DD/MM/YYYY'),\r\n            day : nextDayDate.format('d'),\r\n            checked : false\r\n        }\r\n\r\n        delete repeatedTodo.id\r\n        \r\n        firebase\r\n            .firestore()\r\n            .collection(`users/${UID}/todos`)\r\n            .add(repeatedTodo)\r\n    }\r\n\r\n    const handleDelete = (todo) => {\r\n        deleteTodo(todo)\r\n        if(selectedTodo === todo){ \r\n            setSelectedTodo(false)\r\n        }\r\n    }\r\n\r\n    // ANIMATION\r\n    const fadeIn = useSpring({\r\n        from : { marginTop : '-12px', opacity : 0 },\r\n        to : { marginTop : '0px', opacity : 1}\r\n    })\r\n\r\n    const checkTransitions = useTransition(todo.checked, {\r\n        from : { position : 'absolute', transform : 'scale(0)' },\r\n        enter : { transform : 'scale(1)' },\r\n        leave : { transform : 'scale(0)' }\r\n    })\r\n\r\n    return (\r\n        <animated.div style={fadeIn} className='Todo'>\r\n            <div\r\n                className=\"todo-container\"\r\n                onMouseEnter={() => setHover(true)}\r\n                onMouseLeave={() => setHover(false)}\r\n            >\r\n                <div\r\n                    className=\"check-todo\"\r\n                    onClick={ () => checkTodo(todo) }\r\n                >\r\n                    {\r\n                        checkTransitions((props, checked) => \r\n                            checked ?\r\n                            <animated.span style={props} className=\"checked\">\r\n                                <CheckCircleFill color=\"#bebebe\" />\r\n                            </animated.span>\r\n                            :\r\n                            <animated.span style={props} className=\"unchecked\">\r\n                                <Circle color={todo.color} />\r\n                            </animated.span>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div\r\n                    className=\"text\"\r\n                    onClick={ () => setSelectedTodo(todo)}\r\n                >\r\n                    <p style={{color : todo.checked ? '#bebebe' : '#000000'}}>{todo.text}</p>\r\n                    <span>{todo.time} - {todo.projectName} - {todo.date}</span>\r\n                    <div className={`line ${todo.checked ? 'line-through' : ''}`}></div>\r\n                </div>\r\n                <div\r\n                    className=\"add-to-next-day\"\r\n                    onClick={() => repeatNextDay(todo)}\r\n                >\r\n                    {\r\n                        todo.checked &&\r\n                        <span>\r\n                            <ArrowClockwise />\r\n                        </span>\r\n                    }\r\n                </div>\r\n                <div\r\n                    className=\"delete-todo\"\r\n                    onClick={ () => handleDelete(todo)}\r\n                >\r\n                    {\r\n                        (hover || todo.checked) &&\r\n                        <span>\r\n                            <Trash />\r\n                        </span>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </animated.div>\r\n    )\r\n}\r\n\r\nexport default Todo","import moment from 'moment'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Todo from './Todo'\r\n\r\nfunction Next7Days({ todos }) {\r\n    const [weekTodos, setWeekTodos] = useState([])\r\n\r\n    useEffect(() => {\r\n        const days = ['0', '1', '2', '3', '4', '5', '6']\r\n\r\n        const sortedTodosByDay = days.map(day => {\r\n            return {\r\n                todos: todos.filter(todo => todo.day === day),\r\n                number: day\r\n            }\r\n        })\r\n\r\n        const today = parseInt(moment().format('d'))\r\n\r\n        const arrangeDays = sortedTodosByDay.slice(today).concat(sortedTodosByDay.slice(0, today))\r\n\r\n        setWeekTodos(arrangeDays)\r\n    }, [todos])\r\n\r\n    return (\r\n        <div className='Next7Days'>\r\n            {\r\n                weekTodos.map(day =>\r\n                    <div key={day.number}>\r\n                        <div className='day'>\r\n                            <div className='name'>\r\n                                {moment(day.number, 'd').format('dddd')}\r\n                                {day.number === moment().format('d') && ' (Today)'}\r\n                            </div>\r\n                            <div className='total-todos'>\r\n                                ({day.todos.length})\r\n                            </div>\r\n                        </div>\r\n                        <div className='todos'>\r\n                            {\r\n                                day.todos.map(todo =>\r\n                                    <Todo key={todo.id} todo={todo} />\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Next7Days","import React, {useContext} from 'react'\r\nimport Todo from './Todo'\r\nimport Next7Days from './Next7Days'\r\nimport { TodoContext } from '../context'\r\n\r\nfunction Todos(){\r\n    const { todos, selectedProject } = useContext(TodoContext)\r\n\r\n    return (\r\n        <div className='Todos'>\r\n            <div className='selected-project'>\r\n                {selectedProject}\r\n            </div>\r\n            <div className=\"todos\">\r\n            {\r\n                selectedProject === \"next 7 days\" ?\r\n                <Next7Days todos={todos} />\r\n                :\r\n                todos.map( todo => \r\n                    <Todo todo={todo} key={todo.id} />    \r\n                )\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todos","import React, {useContext, useEffect, useState} from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport { TodoContext } from '../context'\r\nimport moment from 'moment'\r\nimport firebase from '../firebase'\r\n\r\nfunction EditTodo(){\r\n    // CONETXT\r\n    const { selectedTodo : todo, projects, UID } = useContext(TodoContext)\r\n\r\n    // STATE\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState(new Date())\r\n    const [time, setTime] = useState(new Date())\r\n    const [todoProject, setTodoProject] = useState('')\r\n\r\n    useEffect(() => {\r\n        if(todo){\r\n            setText(todo.text)\r\n            setDay(moment(todo.date, 'DD/MM/YYYY'))\r\n            setTime(moment(todo.time, 'hh:mm A'))\r\n            setTodoProject(todo.projectName)\r\n        }\r\n    }, [todo])\r\n\r\n    useEffect( () => {\r\n        if(todo){\r\n            firebase\r\n                .firestore()\r\n                .collection(`users/${UID}/todos`)\r\n                .doc(todo.id)\r\n                .update({\r\n                    text,\r\n                    date : moment(day).format('DD/MM/YYYY'),\r\n                    day : moment(day).format('d'),\r\n                    time : moment(time).format('hh:mm A'),\r\n                    projectName : todoProject\r\n                })\r\n        }\r\n    }, [text, day, time, todoProject])\r\n\r\n    function handleSubmit(e){\r\n\r\n    }\r\n\r\n    \r\n    var filteredProjects = projects.filter(proj => proj.userID == UID);\r\n\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                todo &&\r\n                <div className='EditTodo'>\r\n                    <div className=\"header\">\r\n                        Edit Todo\r\n                    </div>\r\n                    <div className=\"container\">\r\n                        <TodoForm\r\n                            handleSubmit={handleSubmit}\r\n                            text={text}\r\n                            setText={setText}\r\n                            day={day}\r\n                            setDay={setDay}\r\n                            time={time}\r\n                            setTime={setTime}\r\n                            todoProject={todoProject}\r\n                            setTodoProject={setTodoProject}\r\n                            projects={filteredProjects}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EditTodo","import React from 'react';\r\nimport Sidebar from '../components/Sidebar'\r\nimport Main from '../components/Main'\r\nimport User from '../components/User'\r\nimport AddNewTodo from '../components/AddNewTodo'\r\nimport Calendar from '../components/Calendar'\r\nimport Projects from '../components/Projects'\r\nimport Todos from '../components/Todos'\r\nimport EditTodo from '../components/EditTodo'\r\n\r\nconst Mainpage = () => {\r\n    return (\r\n        <>\r\n        <Sidebar>\r\n        <User />\r\n        <AddNewTodo />\r\n        <Calendar />\r\n        <Projects />\r\n      </Sidebar>\r\n      <Main>\r\n        <Todos />\r\n        <EditTodo />\r\n      </Main>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Mainpage;\r\n","export default __webpack_public_path__ + \"static/media/wave.3eb81e26.svg\";","import './App.css';\r\nimport Mainpage from './components/MainPage';\r\nimport { useAuthState } from \"react-firebase-hooks/auth\"\r\nimport React, { useContext } from \"react\";\r\nimport firebase, { auth } from './firebase'\r\nimport { TodoContext } from './context'\r\nimport \"firebase/auth\";\r\nimport waves from \"./images/wave.svg\"\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst App =  () => {\r\n\r\n  const { UID, setUID  } = useContext(TodoContext)\r\n\r\n  if(localStorage.getItem('UserId') != undefined || null){\r\n    setUID(localStorage.getItem('UserId'))\r\n  }\r\n  else{\r\n    console.log(\"no user\")\r\n  }\r\n\r\n  const LogIn = () => {\r\n   \r\n (auth.signInWithPopup(new firebase.auth.GoogleAuthProvider()))\r\n .then((response) => {\r\n  setUID((response.user.uid),(localStorage.setItem('UserId', response.user.uid)))\r\n}) \r\n}\r\n\r\n\r\n const [user] = useAuthState(auth)\r\n\r\n  return (\r\n    \r\n    <div className=\"App\">\r\n{\r\n  user\r\n      ?\r\n     <Mainpage />\r\n     : \r\n     <>\r\n     <div className='small'>\r\n                <h1> Sorry this application is not supported on smaller screens!</h1>\r\n            </div>\r\n  <section id=\"LoginPage\">\r\n  <h1>Alex Tran's TOOD's</h1>\r\n  <div onClick={LogIn} className=\"google-btn\">\r\n  <div className=\"google-icon-wrapper\">\r\n    <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"/>\r\n  </div>\r\n  <p className=\"btn-text\"><>Sign in with google</></p>\r\n</div>\r\n<p className=\"text\">Since this is my first firebase project, google authentication is used just for simplicity!\r\nP.s Try not to close the authentication window, it breaks the code (will fix later).</p>\r\n  <img src={waves}></img>\r\n</section></>\r\n}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { TodoContextProvider } from './context'\n\nReactDOM.render(\n  <TodoContextProvider>\n    <App />\n  </TodoContextProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}